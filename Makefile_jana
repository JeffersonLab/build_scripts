PWD = $(shell pwd)

ifdef JANA_VERSION
 SOURCE_CODE_TARGET = $(JANA_HOME)/.patches_done
 ifdef JANA_DIRTAG
  JANA_DIR = jana_$(JANA_VERSION)^$(JANA_DIRTAG)
 else
  JANA_DIR = jana_$(JANA_VERSION)
 endif
 TARFILE = jana_$(JANA_VERSION).tgz
else
 SOURCE_CODE_TARGET = $(JANA_HOME)/.checkout_done
 ifndef JANA_URL
  JANA_URL=https://phys12svn.jlab.org/repos/JANA
 endif
 ifdef JANA_DIRTAG
  JANA_DIR = $(notdir $(JANA_URL))^$(JANA_DIRTAG)
 else
  JANA_DIR = $(notdir $(JANA_URL))
 endif
endif

export JANA_HOME = $(PWD)/$(JANA_DIR)

all: $(JANA_HOME)/$(BMS_OSNAME)/jana_prereqs_version.xml

$(JANA_HOME)/$(BMS_OSNAME)/jana_prereqs_version.xml: $(JANA_HOME)/.sconstruct_done
	cd $(JANA_HOME)/$(BMS_OSNAME) ; $(BUILD_SCRIPTS)/version_prereqs.pl jana

$(JANA_HOME)/.sconstruct_done: $(SOURCE_CODE_TARGET)
	cd $(JANA_HOME); scons
	date > $@

$(JANA_HOME)/.checkout_done:
	rm -rf checkout_temp_dir
	mkdir checkout_temp_dir
	cd checkout_temp_dir ; svn co $(JANA_URL)
	mv -v checkout_temp_dir/* $(JANA_DIR)
	rmdir -v checkout_temp_dir
	date > $@

$(JANA_HOME)/.patches_done: $(JANA_HOME)/.untar_done
	@echo info: applying patches
	patch $(JANA_HOME)/SBMS/sbms.py \
	    < $(BUILD_SCRIPTS)/patches/jana/sbms.py.patch
	patch $(JANA_HOME)/SBMS/sbms_config.py \
	    < $(BUILD_SCRIPTS)/patches/jana/sbms_config.py.patch
	patch $(JANA_HOME)/SConstruct \
	    < $(BUILD_SCRIPTS)/patches/jana/SConstruct.patch
	date > $@

$(JANA_HOME)/.untar_done: $(TARFILE)
	rm -rf untar_temp_dir
	mkdir untar_temp_dir
	cd untar_temp_dir ; tar zxf ../$(TARFILE)
	mv -v untar_temp_dir/* $(JANA_DIR)
	rmdir -v untar_temp_dir
	date > $@

$(TARFILE):
	@echo making $@
	wget --no-verbose http://www.jlab.org/JANA/releases/$(TARFILE)
