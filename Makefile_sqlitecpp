PWD = $(shell pwd)
CMAKE3_BIN := $(shell which cmake3)
ifneq ($(CMAKE3_BIN),)
   CMAKE_BIN = cmake3
else
   CMAKE_BIN = cmake
endif
CMAKE = $(CMAKE_BIN) -E env CXXFLAGS="-I$(SQLITE_HOME)/include" $(CMAKE_BIN)

ifdef SQLITECPP_VERSION
 SOURCE_CODE_TARGET = $(SQLITECPP_HOME)/.untar_done
 ifdef SQLITECPP_DIRTAG
  SQLITECPP_DIR = SQLiteCpp-$(SQLITECPP_VERSION)^$(SQLITECPP_DIRTAG)
 else
  SQLITECPP_DIR = SQLiteCpp-$(SQLITECPP_VERSION)
 endif
 TARFILE = $(SQLITECPP_VERSION).tar.gz
else
 SOURCE_CODE_TARGET = $(SQLITECPP_HOME)/.clone_done
 ifndef SQLITECPP_URL
  SQLITECPP_URL=https://github.com/SRombauts/SQLiteCpp
 endif
 ifdef SQLITECPP_DIRTAG
  SQLITECPP_DIR = $(notdir $(SQLITECPP_URL))^$(SQLITECPP_DIRTAG)
 else
  SQLITECPP_DIR = $(notdir $(SQLITECPP_URL))
 endif
 ifndef SQLITECPP_BRANCH
  SQLITECPP_BRANCH = master
 endif
endif
UNTAR_TEMP_DIR := untar_temp_dir_$(shell echo $$RANDOM)

SQLITECPP_HOME = $(PWD)/$(SQLITECPP_DIR)

include $(BUILD_SCRIPTS)/sqlite_version.mk
ifeq ($(SQLITE_LT_3_19), true)
    LEGACY_ON_OR_OFF = ON
else
    LEGACY_ON_OR_OFF = OFF
endif

all: $(SQLITECPP_HOME)/sqlitecpp_prereqs.xml

$(TARFILE):
	wget --no-verbose --no-check-certificate -O $@ https://github.com/SRombauts/SQLiteCpp/archive/$(TARFILE)

$(SQLITECPP_HOME)/.clone_done:
	git clone -b $(SQLITECPP_BRANCH) $(SQLITECPP_URL) $(SQLITECPP_DIR)
ifdef SQLITECPP_HASH
	cd $(SQLITECPP_DIR) ; git checkout $(SQLITECPP_HASH)
endif
	date > $@

$(SQLITECPP_HOME)/.untar_done: $(TARFILE)
	rm -rf $(UNTAR_TEMP_DIR)
	mkdir $(UNTAR_TEMP_DIR)
	cd $(UNTAR_TEMP_DIR) ; tar zxf ../$(TARFILE)
	mv -v $(UNTAR_TEMP_DIR)/* $(SQLITECPP_DIR)
	rmdir -v $(UNTAR_TEMP_DIR)
	date > $@

$(SQLITECPP_HOME)/.cmake_done: $(SOURCE_CODE_TARGET)
	cd $(SQLITECPP_HOME) ; mkdir -p build
	cd $(SQLITECPP_HOME)/build; $(CMAKE) \
	   	 -DSQLITECPP_INTERNAL_SQLITE=OFF \
	   	 -DSQLITE_USE_LEGACY_STRUCT=ON \
		 -DCMAKE_INSTALL_PREFIX=$(SQLITECPP_HOME) \
		 -DSQLite3_INCLUDE_DIR=$(SQLITE_HOME)/include \
		 -DSQLite3_LIBRARY=$(SQLITE_HOME)/lib/libsqlite3.so \
		 -DSQLITE_USE_LEGACY_STRUCT=$(LEGACY_ON_OR_OFF) \
		 ..
	date > $@

$(SQLITECPP_HOME)/.make_done: $(SQLITECPP_HOME)/.cmake_done
	make -C $(SQLITECPP_HOME)/build
	date > $@

$(SQLITECPP_HOME)/.install_done: $(SQLITECPP_HOME)/.make_done
	make -C $(SQLITECPP_HOME)/build install
	date > $@

$(SQLITECPP_HOME)/sqlitecpp_prereqs.xml: $(SQLITECPP_HOME)/.install_done
	cd $(SQLITECPP_HOME) ; $(BUILD_SCRIPTS)/version_prereqs.pl sqlitecpp
