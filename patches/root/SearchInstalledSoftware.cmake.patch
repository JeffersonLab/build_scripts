diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake
index eb8fc11a23..fb3ec7a9bd 100644
--- a/cmake/modules/SearchInstalledSoftware.cmake
+++ b/cmake/modules/SearchInstalledSoftware.cmake
@@ -1,7 +1,7 @@
 #---Check for installed packages depending on the build options/components eamnbled -
 include(ExternalProject)
 include(FindPackageHandleStandardArgs)
-set(repository_tarfiles http://service-spi.web.cern.ch/service-spi/external/tarFiles)
+set(lcgpackages http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/sources)
 
 #---On MacOSX, try to find frameworks after standard libraries or headers------------
 set(CMAKE_FIND_FRAMEWORK LAST)
@@ -390,7 +390,7 @@ if(mathmore OR builtin_gsl)
     ExternalProject_Add(
       GSL
       # http://mirror.switch.ch/ftp/mirror/gnu/gsl/gsl-${gsl_version}.tar.gz
-      URL ${repository_tarfiles}/gsl-${gsl_version}.tar.gz
+      URL ${lcgpackages}/gsl-${gsl_version}.tar.gz
       INSTALL_DIR ${CMAKE_BINARY_DIR}
       CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix <INSTALL_DIR>
                         --libdir=<INSTALL_DIR>/lib
@@ -584,7 +584,7 @@ if(ssl OR builtin_openssl)
     endif()
     ExternalProject_Add(
       OPENSSL
-      URL ${repository_tarfiles}/openssl-${openssl_version}.tar.gz
+      URL ${lcgpackages}/openssl-${openssl_version}.tar.gz
       CONFIGURE_COMMAND ${openssl_config_cmd} no-shared --prefix=<INSTALL_DIR>
       BUILD_COMMAND make -j1 CC=${CMAKE_C_COMPILER}\ -fPIC
       INSTALL_COMMAND make install_sw
@@ -759,7 +759,7 @@ if(builtin_fftw3)
   message(STATUS "Downloading and building FFTW version ${FFTW_VERSION}")
   ExternalProject_Add(
     FFTW3
-    URL ${repository_tarfiles}/fftw-${FFTW_VERSION}.tar.gz
+    URL ${lcgpackages}/fftw-${FFTW_VERSION}.tar.gz
     INSTALL_DIR ${CMAKE_BINARY_DIR}
     CONFIGURE_COMMAND ./configure --prefix=<INSTALL_DIR>
     BUILD_COMMAND make CFLAGS=-fPIC
@@ -780,7 +780,7 @@ if(fitsio OR builtin_cfitsio)
     ExternalProject_Add(
       CFITSIO
       # ftp://heasarc.gsfc.nasa.gov/software/fitsio/c/cfitsio${cfitsio_version_no_dots}.tar.gz
-      URL ${repository_tarfiles}/cfitsio${cfitsio_version_no_dots}.tar.gz
+      URL ${lcgpackages}/cfitsio${cfitsio_version_no_dots}.tar.gz
       INSTALL_DIR ${CMAKE_BINARY_DIR}
       CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix <INSTALL_DIR>
       LOG_DOWNLOAD 1 LOG_CONFIGURE 1 LOG_BUILD 1 LOG_INSTALL 1
@@ -852,7 +852,7 @@ if(xrootd)
   endif()
 endif()
 if(builtin_xrootd)
-  set(xrootd_version 4.3.0)
+  set(xrootd_version 4.6.1)
   set(xrootd_versionnum 400030000)
   message(STATUS "Downloading and building XROOTD version ${xrootd_version}")
   string(REPLACE "-Wall " "" __cxxflags "${CMAKE_CXX_FLAGS}")  # Otherwise it produces many warnings
@@ -861,7 +861,7 @@ if(builtin_xrootd)
   ExternalProject_Add(
     XROOTD
     # http://xrootd.org/download/v${xrootd_version}/xrootd-${xrootd_version}.tar.gz
-    URL ${repository_tarfiles}/xrootd-${xrootd_version}.tar.gz
+    URL ${lcgpackages}/xrootd-${xrootd_version}.tar.gz
     INSTALL_DIR ${CMAKE_BINARY_DIR}
     CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
                -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
@@ -1062,7 +1062,7 @@ if(davix OR builtin_davix)
     ExternalProject_Add(
       DAVIX
       # http://grid-deployment.web.cern.ch/grid-deployment/dms/lcgutil/tar/davix/davix-embedded-${DAVIX_VERSION}.tar.gz
-      URL ${repository_tarfiles}/davix-embedded-${DAVIX_VERSION}.tar.gz
+      URL ${lcgpackages}/davix-embedded-${DAVIX_VERSION}.tar.gz
       PATCH_COMMAND patch -p1 -i ${CMAKE_SOURCE_DIR}/cmake/patches/davix-${DAVIX_VERSION}.patch
       CMAKE_CACHE_ARGS -DCMAKE_PREFIX_PATH:STRING=${OPENSSL_PREFIX}
       CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>
@@ -1171,11 +1171,11 @@ if(imt)
   endif()
 endif()  
 if(builtin_tbb)
-  set(tbb_version 44_20160413)
+  set(tbb_version 2017_U5)
   ROOT_ADD_CXX_FLAG(_tbb_cxxflags -mno-rtm)
   ExternalProject_Add(
     TBB
-    URL ${repository_tarfiles}/tbb${tbb_version}oss_src.tgz
+    URL ${lcgpackages}/tbb${tbb_version}.tar.gz
     INSTALL_DIR ${CMAKE_BINARY_DIR}
     CONFIGURE_COMMAND ""
     BUILD_COMMAND make CXXFLAGS=${_tbb_cxxflags} CPLUS=${CMAKE_CXX_COMPILER} CONLY=${CMAKE_C_COMPILER}
@@ -1242,7 +1242,7 @@ if(vc OR builtin_vc)
     set(vc_version 1.1.0)
     ExternalProject_Add(
       VC
-      URL ${repository_tarfiles}/Vc-${vc_version}.tar.gz
+      URL ${lcgpackages}/Vc-${vc_version}.tar.gz
       INSTALL_DIR ${CMAKE_BINARY_DIR}
       CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>
       LOG_DOWNLOAD 1 LOG_CONFIGURE 1 LOG_BUILD 1 LOG_INSTALL 1
